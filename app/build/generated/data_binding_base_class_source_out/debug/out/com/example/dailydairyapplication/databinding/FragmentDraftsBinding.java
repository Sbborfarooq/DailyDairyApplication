// Generated by view binder compiler. Do not edit!
package com.example.dailydairyapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.dailydairyapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDraftsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView draftTextView;

  @NonNull
  public final TextView draftid;

  @NonNull
  public final ImageView draftsbackArrow;

  @NonNull
  public final ImageView imageView5;

  private FragmentDraftsBinding(@NonNull ConstraintLayout rootView, @NonNull TextView draftTextView,
      @NonNull TextView draftid, @NonNull ImageView draftsbackArrow,
      @NonNull ImageView imageView5) {
    this.rootView = rootView;
    this.draftTextView = draftTextView;
    this.draftid = draftid;
    this.draftsbackArrow = draftsbackArrow;
    this.imageView5 = imageView5;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDraftsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDraftsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_drafts, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDraftsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.draft_textView;
      TextView draftTextView = ViewBindings.findChildViewById(rootView, id);
      if (draftTextView == null) {
        break missingId;
      }

      id = R.id.draftid;
      TextView draftid = ViewBindings.findChildViewById(rootView, id);
      if (draftid == null) {
        break missingId;
      }

      id = R.id.draftsbackArrow;
      ImageView draftsbackArrow = ViewBindings.findChildViewById(rootView, id);
      if (draftsbackArrow == null) {
        break missingId;
      }

      id = R.id.imageView5;
      ImageView imageView5 = ViewBindings.findChildViewById(rootView, id);
      if (imageView5 == null) {
        break missingId;
      }

      return new FragmentDraftsBinding((ConstraintLayout) rootView, draftTextView, draftid,
          draftsbackArrow, imageView5);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
